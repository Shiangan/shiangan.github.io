# GitHub Actions workflow for deploying to OpenShift with Fortify security scan
name: OpenShift CI/CD with Fortify Security Scan

env:
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: ""
  APP_NAME: ""
  APP_PORT: ""
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_TAGS: ""

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    name: Build, Scan, and Deploy to OpenShift
    runs-on: ubuntu-20.04

    steps:
    # Check required secrets
    - name: Check for required secrets
      uses: actions/github-script@v6
      with:
        script: |
          const secrets = {
            OPENSHIFT_SERVER: `${{ secrets.OPENSHIFT_SERVER }}`,
            OPENSHIFT_TOKEN: `${{ secrets.OPENSHIFT_TOKEN }}`
          };
          const missingSecrets = Object.entries(secrets).filter(([name, value]) => !value);
          if (missingSecrets.length > 0) {
            core.setFailed(`Missing required secrets: ${missingSecrets.map(([name]) => name).join(", ")}`);
          }

    # Checkout repository
    - name: Check out repository
      uses: actions/checkout@v4

    # Determine application name and image tags
    - name: Set app name and image tags
      run: |
        echo "APP_NAME=${{ env.APP_NAME || github.repository }}" >> $GITHUB_ENV
        echo "IMAGE_TAGS=latest ${GITHUB_SHA::12}" >> $GITHUB_ENV

    # Build Docker image
    - name: Build Docker image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.APP_NAME }}
        tags: ${{ env.IMAGE_TAGS }}
        dockerfiles: ./Dockerfile

    # Push image to registry
    - name: Push Docker image to registry
      id: push-image
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ env.IMAGE_REGISTRY_USER }}
        password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

    # Fortify security scan
    - name: Fortify Security Scan
      uses: fortify/github-action/setup@v1.2.2
      with:
        FOD_RELEASE: Shiangan/shiangan.github.io:main

    # Install OpenShift CLI (oc)
    - name: Install OpenShift CLI
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: 4

    # Login to OpenShift
    - name: Login to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}

    # Deploy and expose the application
    - name: Deploy and expose app
      id: deploy-and-expose
      uses: redhat-actions/oc-new-app@v1
      with:
        app_name: ${{ env.APP_NAME }}
        image: ${{ steps.push-image.outputs.registry-path }}
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}
        port: ${{ env.APP_PORT }}

    # Output the application route
    - name: Print application URL
      run: |
        if [[ -z "${{ steps.deploy-and-expose.outputs.route }}" ]]; then
          echo "⚠️ Application route determination failed."
          exit 1
        fi
        echo "Your application is available at: ${{ steps.deploy-and-expose.outputs.route }}"
